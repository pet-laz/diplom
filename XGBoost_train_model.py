import pandas as pd
import numpy as np
import joblib
from xgboost import XGBClassifier
from sklearn.preprocessing import LabelEncoder

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
data = pd.read_csv("diseases.csv", delimiter=";")

# –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤
all_symptoms = sorted({symptom.strip() for i in range(3, data.shape[1])
                       for symptom in data.iloc[:, i].dropna().tolist()})

# –°–æ–∑–¥–∞—ë–º –æ–±—É—á–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
X = []
y = []

for _, row in data.iterrows():
    disease_symptoms = [str(s).strip() for s in row[3:] if pd.notna(s)]
    features = [1 if symptom in disease_symptoms else 0 for symptom in all_symptoms]
    X.append(features)
    y.append(row.iloc[0])  # –ù–∞–∑–≤–∞–Ω–∏–µ –±–æ–ª–µ–∑–Ω–∏

X = np.array(X)
y = np.array(y)

# –ö–æ–¥–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –±–æ–ª–µ–∑–Ω–µ–π –≤ —á–∏—Å–ª–∞
label_encoder = LabelEncoder()
y_encoded = label_encoder.fit_transform(y)

# –û–±—É—á–∞–µ–º XGBoost-–º–æ–¥–µ–ª—å
model = XGBClassifier(
    n_estimators=100,
    learning_rate=0.1,
    max_depth=4,
    use_label_encoder=False,
    eval_metric='mlogloss',
    verbosity=0
)
model.fit(X, y_encoded)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–æ–¥–µ–ª—å –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
joblib.dump(model, 'xgb_model.pkl')
joblib.dump(all_symptoms, 'xgb_symptoms.pkl')
joblib.dump(label_encoder, 'label_encoder.pkl')

print("‚úÖ XGBoost-–º–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ 'xgb_model.pkl'")
print("üìÅ –°–∏–º–ø—Ç–æ–º—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ 'xgb_symptoms.pkl'")
print("üìÅ LabelEncoder —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ 'label_encoder.pkl'")
